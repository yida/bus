extern "C" {
  #include "lua.h"
  #include "lualib.h"
  #include "lauxlib.h"
}

#include <iostream>
#include <exception>
#include <GeographicLib/Geocentric.hpp>


using namespace std;
using namespace GeographicLib;


static int lua_Geocentric_new(lua_State *L) {
  try {
  }
  catch (exception& e) {
    luaL_error(L, "Caught exception");
  }
  luaL_getmetatable(L, "Geocentric");
  lua_setmetatable(L, -2);

  return 1;
}

static int lua_Geocentric_Forward(lua_State *L) {
  try {
    cout << "Forward" << endl;
  }
  catch (exception& e) {
    luaL_error(L, "Caught exception");
  }
  return 1;
}

static int lua_Geocentric_Reverse(lua_State *L) {
  try {
    cout << "Reverse" << endl;
  }
  catch (exception& e) {
    luaL_error(L, "Caught exception");
  }
  return 1;
}

static const struct luaL_reg Geocentric_Methods [] = {
  {"Forward", lua_Geocentric_Forward},
  {"Reverse", lua_Geocentric_Reverse},
  {NULL, NULL}
};

static const struct luaL_reg Geocentric_Functions [] = {
  {"new", lua_Geocentric_new},
  {NULL, NULL}
};

extern "C" int luaopen_Geocentric(lua_State *L) {
  luaL_register(L, NULL, Geocentric_Methods);
  luaL_register(L, "Geocentric", Geocentric_Methods);
  return 1;
}

